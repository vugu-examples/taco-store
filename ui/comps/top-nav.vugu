<div>
    <nav class="navbar navbar-light bg-light">
        <div class="container-fluid">
            <a class="navbar-brand btn" @click='c.Navigate("/", nil)'>
                <img src="https://img.icons8.com/doodle/48/000000/taco.png"/>
                <strong>Taco Store</strong>
            </a>
            <div class="d-flex cart-hover">
                <i class="fa fa-shopping-cart fa-3x pointer" @click='c.Navigate("/cart", nil)'></i>
                <span class="badge badge-warning" style='height: 20px'>
                    <span>(</span>
                    <span vg-content='len(c.Cart)'></span>
                    <span>)</span>
                </span>
                <div class='row border cart-mini py-3 px-2'>
                    <div class='col '>
                        <div vg-for='index, item := range c.Cart' class='row mb-3 ml-0'>
                            <div class='col-3 p-1'>
                                <img :src="item.ImageUrl" class="img-fluid rounded">
                            </div>
                            <div class='col-7 text-left d-flex '>
                                <div class='col-11 '>
                                    <span vg-content='item.Title'></span>
                                    <p vg-content='format.Currency(item.Price) '></p>
                                </div>
                            </div>
                            <div class='col-2'>
                                <button class='btn' @click='c.DeleteCart(event,index)'>
                                    <i class="fa fa-times "></i>
                                </button>
                            </div>
                        </div>
                        <div class='p-1'>
                            <strong>Sub Total:</strong>
                            <strong class='float-right' vg-content='c.GetCartTotal()'></strong>
                            <div class='mt-3'>
                                <button @click='c.Navigate("/cart", nil)' class='btn btn-warning p-2 w-50'>
                                    View Cart
                                </button>
                                <button @click='c.Navigate("/checkout", nil)' class='btn btn-warning ml-2 p-2 w-50'>
                                    Checkout
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </nav>
</div>
<style>
    .pointer {
        cursor: pointer;
    }

    .cart-hover {
        position: relative;
    }

    .cart-hover .cart-mini {
        white-space: nowrap;
        visibility: hidden;
        right: 40px;
        min-width: 370px;
        border-radius: 6px;
        background-color: white;
        position: absolute;
        z-index: 1;
        top: 100%;
    }

    .cart-hover:hover .cart-mini {
        visibility: visible;
    }

</style>
<script type="application/x-go">
import (
    "log"
    "github.com/vugu-examples/taco-store/ui/state"
    "github.com/vugu-examples/taco-store/ui/format"
    "github.com/vugu/vgrouter"
)
type TopNav struct {
    vgrouter.NavigatorRef
    state.CartAPIRef
}

func (c *TopNav) Init(ctx vugu.InitCtx) {
	go func() {
		_, updated, err := c.GetCart()
		if err != nil {
			log.Printf("error getting card: %v", err)
			return
		}

		if updated {
			ctx.EventEnv().Lock()
			ctx.EventEnv().UnlockRender()
		}
	}()
}

func (c *TopNav) DeleteCart(event vugu.DOMEvent, i int) {
	newList := append(c.Cart[:i], c.Cart[i+1:]...)
	ee := event.EventEnv()
	go func() {
		err := c.DeleteCartItem(newList)
		if err != nil {
			ee.Lock()
			log.Printf("error deleting card item: %v", err)
			ee.UnlockRender()
			return
		}
		ee.Lock()
		c.Cart = newList
		ee.UnlockRender()
	}()
}
</script>
